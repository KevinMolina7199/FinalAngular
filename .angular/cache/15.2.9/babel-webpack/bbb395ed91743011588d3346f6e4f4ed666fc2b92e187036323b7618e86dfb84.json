{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/ticket.service\";\nimport * as i2 from \"@angular/router\";\nexport class TicketComponent {\n  constructor(ticketService, router) {\n    this.ticketService = ticketService;\n    this.router = router;\n    //numero: '', estado: '', fechaIngreso: '', fechaSalida: '', vehiculo: '',tarifa: ''\n    //ticket: Ticket = {numero: '', estado: '', fechaIngreso: '', fechaSalida: ''};\n    this.ticket = [];\n    this.listaVehiculos = []; // Asegúrate de llenar esta lista con los vehículos disponibles\n    this.listaTarifas = []; // Asegúrate de llenar esta lista con las tarifas disponibles\n    this.listadoClientesWS = [];\n  }\n  ngOnInit() {\n    this.listarTickets();\n  }\n  guardarT1() {\n    // Aquí puedes realizar la lógica para guardar los datos ingresados en el formulario\n    // Por ejemplo, podrías enviar los datos a través de un servicio HTTP para guardarlos en el backend.\n    // También puedes realizar otras validaciones o acciones necesarias antes de guardar.\n  }\n  listarTickets() {\n    this.ticketService.obtenerVehiculos().subscribe(tickets => {\n      this.ticket = tickets;\n    }, error => {\n      console.error('Error al obtener la lista de tickets:', error);\n    });\n  }\n}\nTicketComponent.ɵfac = function TicketComponent_Factory(t) {\n  return new (t || TicketComponent)(i0.ɵɵdirectiveInject(i1.TicketService), i0.ɵɵdirectiveInject(i2.Router));\n};\nTicketComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TicketComponent,\n  selectors: [[\"app-ticket\"]],\n  decls: 0,\n  vars: 0,\n  template: function TicketComponent_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAWA,OAAM,MAAOA,eAAe;EAI1BC,YAAmBC,aAA4B,EAASC,MAAc;IAAnD,kBAAa,GAAbD,aAAa;IAAwB,WAAM,GAANC,MAAM;IAHhE;IACE;IACA,WAAM,GAAa,EAAE;IAErB,mBAAc,GAAU,EAAE,CAAC,CAAC;IAC5B,iBAAY,GAAU,EAAE,CAAC,CAAC;IAE1B,sBAAiB,GAAU,EAAE;EAJ2C;EAMxEC,QAAQ;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAC,SAAS;IACP;IACA;IACA;EAAA;EAEFD,aAAa;IACX,IAAI,CAACH,aAAa,CAACK,gBAAgB,EAAE,CAACC,SAAS,CAC7CC,OAAO,IAAG;MACR,IAAI,CAACC,MAAM,GAAGD,OAAO;IACvB,CAAC,EACDE,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D,CAAC,CACF;EACH;;AA5BWX,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["TicketComponent","constructor","ticketService","router","ngOnInit","listarTickets","guardarT1","obtenerVehiculos","subscribe","tickets","ticket","error","console","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["C:\\Users\\Danny\\workspace\\ProyectoFinal\\src\\app\\pages\\ticket\\ticket.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Cliente } from 'src/app/domain/cliente';\nimport { Ticket } from 'src/app/domain/ticket';\nimport { TicketService } from 'src/app/services/ticket.service';\n\n@Component({\n  selector: 'app-ticket',\n  templateUrl: './ticket.component.html',\n  styleUrls: ['./ticket.component.scss']\n})\nexport class TicketComponent {\n//numero: '', estado: '', fechaIngreso: '', fechaSalida: '', vehiculo: '',tarifa: ''\n  //ticket: Ticket = {numero: '', estado: '', fechaIngreso: '', fechaSalida: ''};\n  ticket: Ticket[] = [];\n  constructor(public ticketService: TicketService,private router: Router){}\n  listaVehiculos: any[] = []; // Asegúrate de llenar esta lista con los vehículos disponibles\n  listaTarifas: any[] = []; // Asegúrate de llenar esta lista con las tarifas disponibles\n\n  listadoClientesWS: any[] = [];\n\n  ngOnInit(): void {\n    this.listarTickets();\n  }\n\n  guardarT1() {\n    // Aquí puedes realizar la lógica para guardar los datos ingresados en el formulario\n    // Por ejemplo, podrías enviar los datos a través de un servicio HTTP para guardarlos en el backend.\n    // También puedes realizar otras validaciones o acciones necesarias antes de guardar.\n  }\n  listarTickets() {\n    this.ticketService.obtenerVehiculos().subscribe(\n      tickets => {\n        this.ticket = tickets;\n      },\n      error => {\n        console.error('Error al obtener la lista de tickets:', error);\n      }\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}