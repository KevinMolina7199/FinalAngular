{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/ticket.service\";\nimport * as i2 from \"src/app/services/vehiculo.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction TicketComponent_li_48_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function TicketComponent_li_48_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const ticket_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.listar(ticket_r1));\n    });\n    i0.ɵɵtext(3, \"Listar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function TicketComponent_li_48_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const ticket_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.eliminarTicket(ticket_r1));\n    });\n    i0.ɵɵtext(5, \"Eliminar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ticket_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate6(\" \", ticket_r1.numero, \" - \", ticket_r1.fechaIngreso, \" - \", ticket_r1.fechaSalida, \" - \", ticket_r1.estado, \" -\", ticket_r1.vehiculo.placa, \" - \", ticket_r1.tarifa.tipo, \" \");\n  }\n}\nexport class TicketComponent {\n  constructor(ticketService, vehiculoService, router) {\n    this.ticketService = ticketService;\n    this.vehiculoService = vehiculoService;\n    this.router = router;\n    this.ticket = {\n      numero: 0,\n      fechaIngreso: '',\n      fechaSalida: '',\n      estado: '',\n      vehiculo: {\n        placa: '',\n        marca: '',\n        modelo: '',\n        color: ''\n      },\n      tarifa: {\n        id: 1,\n        tipo: '',\n        monto: 0.5\n      }\n    };\n    this.estadosDeTarifas = ['Activo', 'Inactivo'];\n    this.listadoTicketsWS = [];\n    this.showSuccessMsg = false;\n    this.showErrorMsg = false;\n  }\n  ngOnInit() {\n    this.listarTickets();\n    this.ticket.fechaIngreso = this.obtenerHoraActual();\n  }\n  agregarTicket() {\n    if (this.ticket.fechaIngreso === '') {\n      this.ticket.fechaIngreso = null;\n    }\n    if (this.ticket.fechaSalida === '') {\n      this.ticket.fechaSalida = null;\n    }\n    if (this.ticket.estado === '') {\n      this.ticket.estado = 'Activo';\n    }\n    this.ticketService.save(this.ticket).subscribe(response => {\n      // Mostrar mensaje de éxito\n      this.showSuccessMsg = true;\n      // Ocultar mensaje después de 3 segundos\n      setTimeout(() => {\n        this.showSuccessMsg = false;\n      }, 3000);\n      this.ticket = {\n        numero: 0,\n        fechaIngreso: this.obtenerHoraActual(),\n        fechaSalida: '',\n        estado: 'Activo',\n        vehiculo: {\n          placa: '',\n          marca: '',\n          modelo: '',\n          color: ''\n        },\n        tarifa: {\n          id: 1,\n          tipo: '',\n          monto: 0\n        }\n      };\n      this.router.navigate(['registrarTicket']);\n      this.listarTickets();\n    }, error => {\n      console.log(\"${error}\");\n      // Mostrar mensaje de error\n      this.showErrorMsg = true;\n      // Ocultar mensaje después de 3 segundos\n      setTimeout(() => {\n        this.showErrorMsg = false;\n      }, 3000);\n    });\n  }\n  listarTickets() {\n    this.ticketService.obtenerVehiculos().subscribe(response => {\n      this.listadoTicketsWS = response;\n      console.log('Listado de contactos:', this.listadoTicketsWS);\n    }, error => {\n      console.error('Error al obtener la lista de contactos:', error);\n    });\n  }\n  eliminarTicket(ticket) {\n    this.listarTickets();\n    this.ticketService.delete(ticket).subscribe(response => {\n      this.listarTickets();\n    }, error => {\n      console.log(\"${error}\");\n    });\n  }\n  listar(ticket) {\n    this.listarTickets();\n    this.ticket = {\n      numero: ticket.numero,\n      fechaIngreso: ticket.fechaIngreso,\n      fechaSalida: ticket.fechaSalida,\n      estado: ticket.estado,\n      vehiculo: ticket.vehiculo,\n      tarifa: ticket.tarifa\n    };\n  }\n  obtenerHoraActual() {\n    const fechaActual = new Date();\n    const hora = String(fechaActual.getHours()).padStart(2, '0');\n    const minutos = String(fechaActual.getMinutes()).padStart(2, '0');\n    const segundos = String(fechaActual.getSeconds()).padStart(2, '0');\n    return `${hora}:${minutos}:${segundos}`;\n  }\n  agregarHoraActual() {\n    this.ticket.fechaSalida = this.obtenerHoraActual();\n  }\n}\nTicketComponent.ɵfac = function TicketComponent_Factory(t) {\n  return new (t || TicketComponent)(i0.ɵɵdirectiveInject(i1.TicketService), i0.ɵɵdirectiveInject(i2.VehiculoService), i0.ɵɵdirectiveInject(i3.Router));\n};\nTicketComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TicketComponent,\n  selectors: [[\"app-ticket\"]],\n  decls: 49,\n  vars: 8,\n  consts: [[1, \"registro-cliente\"], [\"for\", \"txtNumero\"], [\"id\", \"txtNumero\", \"placeholder\", \"Numero de Ticket\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"txtFechaIngreso\"], [\"id\", \"txtFechaIngreso\", \"type\", \"time\", \"placeholder\", \"Hora de ingreso (opcional)\", \"disabled\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"txtPlaca\"], [\"id\", \"txtPlaca\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"txtTarifa\"], [\"id\", \"txtTarifa\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [1, \"registro-y-listado\"], [\"for\", \"txtNumeroSalida\"], [\"id\", \"txtNumeroSalida\", \"placeholder\", \"Numero de Ticket\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"txtFechaSalida\"], [\"id\", \"txtFechaSalida\", \"type\", \"time\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"txtPlacaSalida\"], [\"id\", \"txtPlacaSalida\", 3, \"ngModel\", \"ngModelChange\"], [1, \"listado-clientes\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function TicketComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Ingresar Auto, Creaci\\u00F3n Ticket\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"label\", 1);\n      i0.ɵɵtext(4, \"Numero:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.ticket.numero = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"br\");\n      i0.ɵɵelementStart(7, \"label\", 3);\n      i0.ɵɵtext(8, \"Fecha de Ingreso:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.ticket.fechaIngreso = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"br\");\n      i0.ɵɵelementStart(11, \"label\", 5);\n      i0.ɵɵtext(12, \"Placa:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.ticket.vehiculo.placa = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"br\");\n      i0.ɵɵelementStart(15, \"label\", 7);\n      i0.ɵɵtext(16, \"Tipo:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.ticket.tarifa.id = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"br\")(19, \"br\")(20, \"br\");\n      i0.ɵɵelementStart(21, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function TicketComponent_Template_button_click_21_listener() {\n        return ctx.agregarTicket();\n      });\n      i0.ɵɵtext(22, \"Guardar\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 10)(24, \"div\", 0)(25, \"h2\");\n      i0.ɵɵtext(26, \"Salida Auto, Actualizaci\\u00F3n Ticket\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"label\", 11);\n      i0.ɵɵtext(28, \"Numero:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketComponent_Template_input_ngModelChange_29_listener($event) {\n        return ctx.ticket.numero = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"br\");\n      i0.ɵɵelementStart(31, \"label\", 13);\n      i0.ɵɵtext(32, \"Fecha de Salida:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketComponent_Template_input_ngModelChange_33_listener($event) {\n        return ctx.ticket.fechaSalida = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function TicketComponent_Template_button_click_34_listener() {\n        return ctx.agregarHoraActual();\n      });\n      i0.ɵɵtext(35, \"Hora Actual\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"br\");\n      i0.ɵɵelementStart(37, \"label\", 15);\n      i0.ɵɵtext(38, \"Placa:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"input\", 16);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketComponent_Template_input_ngModelChange_39_listener($event) {\n        return ctx.ticket.vehiculo.placa = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(40, \"br\")(41, \"br\");\n      i0.ɵɵelementStart(42, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function TicketComponent_Template_button_click_42_listener() {\n        return ctx.agregarTicket();\n      });\n      i0.ɵɵtext(43, \"Guardar/Actualizar\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(44, \"div\", 17)(45, \"h2\");\n      i0.ɵɵtext(46, \"Listado de Tickets\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"ul\");\n      i0.ɵɵtemplate(48, TicketComponent_li_48_Template, 6, 6, \"li\", 18);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.ticket.numero);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.ticket.fechaIngreso);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.ticket.vehiculo.placa);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.ticket.tarifa.id);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngModel\", ctx.ticket.numero);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.ticket.fechaSalida);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.ticket.vehiculo.placa);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.listadoTicketsWS);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.RequiredValidator, i5.NgModel],\n  styles: [\"@charset \\\"UTF-8\\\";\\n\\n.registro-y-listado[_ngcontent-%COMP%] {\\n  display: flex;\\n}\\n\\n.registro-cliente[_ngcontent-%COMP%] {\\n  flex: 1;\\n  margin-right: 20px;\\n  padding: 1rem;\\n  border-radius: 10px;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n}\\n\\n.registro-cliente[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  font-size: 2rem;\\n  color: #007bff;\\n  margin-bottom: 1rem;\\n}\\n\\n.registro-cliente[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  font-size: 1.2rem;\\n  font-weight: bold;\\n  color: #333;\\n}\\n\\n.registro-cliente[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 0.7rem;\\n  margin-bottom: 0.7rem;\\n  border: 2px solid #007bff;\\n  border-radius: 5px;\\n}\\n\\n.registro-cliente[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: #0056b3;\\n}\\n\\n.registro-cliente[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  padding: 0.7rem 1rem;\\n  background-color: #007bff;\\n  color: #fff;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n}\\n\\n.registro-cliente[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\\n}\\n\\n.listado-clientes[_ngcontent-%COMP%] {\\n  flex: 1;\\n  background-color: #f9f9f9;\\n  padding: 1rem;\\n  border-radius: 10px;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n}\\n\\n.listado-clientes[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  font-size: 2rem;\\n  color: #007bff;\\n  margin-bottom: 1rem;\\n}\\n\\n.listado-clientes[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%] {\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n.listado-clientes[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n  font-size: 1.2rem;\\n  color: #333;\\n  margin-bottom: 0.5rem;\\n}\\n\\n\\n.custom-message.success-msg[_ngcontent-%COMP%] {\\n  background-color: green;\\n  color: white;\\n}\\n\\n\\n.custom-message.error-msg[_ngcontent-%COMP%] {\\n  background-color: red;\\n  color: white;\\n}\\n\\n\\n.custom-message[_ngcontent-%COMP%] {\\n  position: fixed;\\n  top: 50px;\\n  left: 50%;\\n  transform: translateX(-50%);\\n  padding: 10px;\\n  border-radius: 5px;\\n  z-index: 1000;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvdGlja2V0L3RpY2tldC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0I7QUFBaEIsMEJBQUE7QUFDQTtFQUNJLGFBQUE7QUFFSjs7QUFDRTtFQUNFLE9BQUE7RUFDQSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHdDQUFBO0FBRUo7O0FBQ0U7RUFDRSxlQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0FBRUo7O0FBQ0U7RUFDRSxpQkFBQTtFQUNBLGlCQUFBO0VBQ0EsV0FBQTtBQUVKOztBQUNFO0VBQ0UsV0FBQTtFQUNBLGVBQUE7RUFDQSxxQkFBQTtFQUNBLHlCQUFBO0VBQ0Esa0JBQUE7QUFFSjs7QUFDRTtFQUNFLGFBQUE7RUFDQSxxQkFBQTtBQUVKOztBQUNFO0VBQ0Usb0JBQUE7RUFDQSx5QkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0FBRUo7O0FBQ0U7RUFDRSx5QkFBQTtFQUNBLHdDQUFBO0FBRUo7O0FBQ0U7RUFDRSxPQUFBO0VBQ0EseUJBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx3Q0FBQTtBQUVKOztBQUNFO0VBQ0UsZUFBQTtFQUNBLGNBQUE7RUFDQSxtQkFBQTtBQUVKOztBQUNFO0VBQ0UsZ0JBQUE7RUFDQSxVQUFBO0VBQ0EsU0FBQTtBQUVKOztBQUNFO0VBQ0UsaUJBQUE7RUFDQSxXQUFBO0VBQ0EscUJBQUE7QUFFSjs7QUFDRSxrQ0FBQTtBQUNGO0VBQ0UsdUJBQUE7RUFDQSxZQUFBO0FBRUY7O0FBQ0Esa0NBQUE7QUFDQTtFQUNFLHFCQUFBO0VBQ0EsWUFBQTtBQUVGOztBQUNBLDZDQUFBO0FBQ0E7RUFDRSxlQUFBO0VBQ0EsU0FBQTtFQUNBLFNBQUE7RUFDQSwyQkFBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtFQUNBLGFBQUE7QUFFRiIsInNvdXJjZXNDb250ZW50IjpbIi8qIGNsaWVudGUuY29tcG9uZW50LmNzcyAqL1xyXG4ucmVnaXN0cm8teS1saXN0YWRvIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgfVxyXG4gIFxyXG4gIC5yZWdpc3Ryby1jbGllbnRlIHtcclxuICAgIGZsZXg6IDE7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgICBwYWRkaW5nOiAxcmVtO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIGJveC1zaGFkb3c6IDAgNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgfVxyXG4gIFxyXG4gIC5yZWdpc3Ryby1jbGllbnRlIGgyIHtcclxuICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgIGNvbG9yOiAjMDA3YmZmO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcclxuICB9XHJcbiAgXHJcbiAgLnJlZ2lzdHJvLWNsaWVudGUgbGFiZWwge1xyXG4gICAgZm9udC1zaXplOiAxLjJyZW07XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGNvbG9yOiAjMzMzO1xyXG4gIH1cclxuICBcclxuICAucmVnaXN0cm8tY2xpZW50ZSBpbnB1dCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDAuN3JlbTtcclxuICAgIG1hcmdpbi1ib3R0b206IDAuN3JlbTtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkICMwMDdiZmY7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5yZWdpc3Ryby1jbGllbnRlIGlucHV0OmZvY3VzIHtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBib3JkZXItY29sb3I6ICMwMDU2YjM7XHJcbiAgfVxyXG4gIFxyXG4gIC5yZWdpc3Ryby1jbGllbnRlIGJ1dHRvbiB7XHJcbiAgICBwYWRkaW5nOiAwLjdyZW0gMXJlbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbiAgXHJcbiAgLnJlZ2lzdHJvLWNsaWVudGUgYnV0dG9uOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDU2YjM7XHJcbiAgICBib3gtc2hhZG93OiAwIDJweCA0cHggcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG4gIH1cclxuICBcclxuICAubGlzdGFkby1jbGllbnRlcyB7XHJcbiAgICBmbGV4OiAxO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcclxuICAgIHBhZGRpbmc6IDFyZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgYm94LXNoYWRvdzogMCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICB9XHJcbiAgXHJcbiAgLmxpc3RhZG8tY2xpZW50ZXMgaDIge1xyXG4gICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgY29sb3I6ICMwMDdiZmY7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xyXG4gIH1cclxuICBcclxuICAubGlzdGFkby1jbGllbnRlcyB1bCB7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICB9XHJcbiAgXHJcbiAgLmxpc3RhZG8tY2xpZW50ZXMgbGkge1xyXG4gICAgZm9udC1zaXplOiAxLjJyZW07XHJcbiAgICBjb2xvcjogIzMzMztcclxuICAgIG1hcmdpbi1ib3R0b206IDAuNXJlbTtcclxuICB9XHJcbiAgXHJcbiAgLyogRXN0aWxvIHBhcmEgbWVuc2FqZXMgZGUgw4PCqXhpdG8gKi9cclxuLmN1c3RvbS1tZXNzYWdlLnN1Y2Nlc3MtbXNnIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi8qIEVzdGlsbyBwYXJhIG1lbnNhamVzIGRlIGVycm9yICovXHJcbi5jdXN0b20tbWVzc2FnZS5lcnJvci1tc2cge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi8qIEVzdGlsbyBjb23Dg8K6biBwYXJhIGxvcyBtZW5zYWplcyBmbG90YW50ZXMgKi9cclxuLmN1c3RvbS1tZXNzYWdlIHtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgdG9wOiA1MHB4O1xyXG4gIGxlZnQ6IDUwJTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgei1pbmRleDogMTAwMDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","TicketComponent","constructor","ticketService","vehiculoService","router","numero","fechaIngreso","fechaSalida","estado","vehiculo","placa","marca","modelo","color","tarifa","id","tipo","monto","ngOnInit","listarTickets","ticket","obtenerHoraActual","agregarTicket","save","subscribe","response","showSuccessMsg","setTimeout","navigate","error","console","log","showErrorMsg","obtenerVehiculos","listadoTicketsWS","eliminarTicket","delete","listar","fechaActual","Date","hora","String","getHours","padStart","minutos","getMinutes","segundos","getSeconds","agregarHoraActual","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Danny\\workspace\\ProyectoFinal\\src\\app\\pages\\ticket\\ticket.component.html","C:\\Users\\Danny\\workspace\\ProyectoFinal\\src\\app\\pages\\ticket\\ticket.component.ts"],"sourcesContent":["<!-- Sección de Registro de Cliente -->\n<div class=\"registro-cliente\">\n    <h2>Ingresar Auto, Creación Ticket</h2>\n    <label for=\"txtNumero\">Numero:</label>\n    <input id=\"txtNumero\" [(ngModel)]=\"ticket.numero\" placeholder=\"Numero de Ticket\" />\n    <br />\n    <label for=\"txtFechaIngreso\">Fecha de Ingreso:</label>\n    <input id=\"txtFechaIngreso\" type=\"time\" [(ngModel)]=\"ticket.fechaIngreso\" placeholder=\"Hora de ingreso (opcional)\"\n        disabled />\n    <br />\n    <label for=\"txtPlaca\">Placa:</label>\n    <input id=\"txtPlaca\" [(ngModel)]=\"ticket.vehiculo.placa\" />\n    <br />\n    <label for=\"txtTarifa\">Tipo:</label>\n    <input id=\"txtTarifa\" [(ngModel)]=\"ticket.tarifa.id\" />\n    <br>\n    <br>\n    <br />\n    <button (click)=\"agregarTicket()\">Guardar</button>\n</div>\n<div class=\"registro-y-listado\">\n    <!-- Sección de Registro de Cliente -->\n    <div class=\"registro-cliente\">\n        <h2>Salida Auto, Actualización Ticket</h2>\n        <label for=\"txtNumeroSalida\">Numero:</label>\n        <input id=\"txtNumeroSalida\" [(ngModel)]=\"ticket.numero\" placeholder=\"Numero de Ticket\" />\n        <br />\n        <label for=\"txtFechaSalida\">Fecha de Salida:</label>\n        <input id=\"txtFechaSalida\" type=\"time\" [(ngModel)]=\"ticket.fechaSalida\" required />\n        <button (click)=\"agregarHoraActual()\">Hora Actual</button>\n        <br>\n        <label for=\"txtPlacaSalida\">Placa:</label>\n        <input id=\"txtPlacaSalida\" [(ngModel)]=\"ticket.vehiculo.placa\" />\n        <br>\n        <br />\n        <button (click)=\"agregarTicket()\">Guardar/Actualizar</button>\n    </div>\n\n    <!-- Sección de Listado de Tickets -->\n    <div class=\"listado-clientes\">\n        <h2>Listado de Tickets</h2>\n        <ul>\n            <li *ngFor=\"let ticket of listadoTicketsWS\">\n                {{ ticket.numero }} - {{ ticket.fechaIngreso }} - {{ ticket.fechaSalida }} - {{ ticket.estado }} -{{\n                ticket.vehiculo.placa }} - {{ticket.tarifa.tipo}}\n                <button (click)=\"listar(ticket)\">Listar</button>\n                <button (click)=\"eliminarTicket(ticket)\">Eliminar</button>\n            </li>\n        </ul>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Ticket } from 'src/app/domain/ticket';\nimport { Vehiculo } from 'src/app/domain/vehiculo';\nimport { TicketService } from 'src/app/services/ticket.service';\nimport { VehiculoService } from 'src/app/services/vehiculo.service';\n\n@Component({\n  selector: 'app-ticket',\n  templateUrl: './ticket.component.html',\n  styleUrls: ['./ticket.component.scss']\n})\nexport class TicketComponent {  \n  ticket: Ticket = {\n    numero: 0,\n    fechaIngreso: '',\n    fechaSalida: '',\n    estado: '',\n    vehiculo: {\n      placa: '',\n      marca: '',\n      modelo: '',\n      color: ''\n    },\n    tarifa: {\n      id: 1,\n      tipo: '',\n      monto: 0.5\n    }\n  };\n\n  estadosDeTarifas: string[] = ['Activo', 'Inactivo'];\n\n  constructor(public ticketService: TicketService,public vehiculoService: VehiculoService, private router: Router) { }\n  listadoTicketsWS: any[] = [];\n\n  ngOnInit(): void {\n    this.listarTickets();\n    this.ticket.fechaIngreso = this.obtenerHoraActual();\n  }\n\n  showSuccessMsg: boolean = false;\n  showErrorMsg: boolean = false;\n\n  agregarTicket() {\n    if (this.ticket.fechaIngreso === '') {\n      this.ticket.fechaIngreso = null;\n    }\n    if (this.ticket.fechaSalida === '') {\n      this.ticket.fechaSalida = null;\n    }\n    if (this.ticket.estado === '') {\n      this.ticket.estado = 'Activo';\n    }\n    this.ticketService.save(this.ticket).subscribe(\n      response => {\n        // Mostrar mensaje de éxito\n        this.showSuccessMsg = true;\n\n        // Ocultar mensaje después de 3 segundos\n        setTimeout(() => {\n          this.showSuccessMsg = false;\n        }, 3000);\n\n        this.ticket = {numero: 0, fechaIngreso: this.obtenerHoraActual(), fechaSalida: '', estado: 'Activo',\n          vehiculo: {\n            placa: '',\n            marca: '',\n            modelo: '',\n            color: ''\n          },\n          tarifa: {\n            id: 1,\n            tipo: '',\n            monto: 0\n          }\n        };\n        this.router.navigate(['registrarTicket']);\n        this.listarTickets();\n      },\n      error => {\n        console.log(\"${error}\");\n        // Mostrar mensaje de error\n        this.showErrorMsg = true;\n\n        // Ocultar mensaje después de 3 segundos\n        setTimeout(() => {\n          this.showErrorMsg = false;\n        }, 3000);\n      }\n    );\n  }\n\n  public listarTickets() {\n    this.ticketService.obtenerVehiculos().subscribe(\n      (response) => {\n        this.listadoTicketsWS = response;\n        console.log('Listado de contactos:', this.listadoTicketsWS);\n      },\n      (error) => {\n        console.error('Error al obtener la lista de contactos:', error);\n      }\n    );\n  }\n\n  eliminarTicket(ticket: Ticket) {\n    this.listarTickets();\n    this.ticketService.delete(ticket).subscribe(\n      response => {\n        this.listarTickets();\n      },\n      error => {\n        console.log(\"${error}\");        \n      }\n    );\n  }\n\n  listar(ticket: Ticket){\n    this.listarTickets();\n    this.ticket = { numero: ticket.numero, fechaIngreso: ticket.fechaIngreso , fechaSalida: ticket.fechaSalida, estado: ticket.estado, vehiculo: ticket.vehiculo, tarifa: ticket.tarifa};\n  }\n\n  obtenerHoraActual(): string {\n    const fechaActual = new Date();\n    const hora = String(fechaActual.getHours()).padStart(2, '0');\n    const minutos = String(fechaActual.getMinutes()).padStart(2, '0');\n    const segundos = String(fechaActual.getSeconds()).padStart(2, '0');\n    return `${hora}:${minutos}:${segundos}`;\n  }\n  agregarHoraActual() {\n    this.ticket.fechaSalida = this.obtenerHoraActual();\n  }\n  \n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}