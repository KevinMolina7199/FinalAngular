{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/ticket.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction TicketComponent_li_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ticket_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate6(\" \", ticket_r1.numero, \" - \", ticket_r1.fechaIngreso, \" - \", ticket_r1.fechaSalida, \" - \", ticket_r1.estado, \" -\", ticket_r1.vehiculo.placa, \" - \", ticket_r1.tarifa.tipo, \" \");\n  }\n}\nexport class TicketComponent {\n  constructor(ticketService, router) {\n    this.ticketService = ticketService;\n    this.router = router;\n    this.ticket = {\n      numero: 0,\n      fechaIngreso: new Date(),\n      fechaSalida: new Date(),\n      estado: '',\n      vehiculo: {\n        placa: '',\n        marca: '',\n        modelo: '',\n        color: ''\n      },\n      tarifa: {\n        id: 0,\n        tipo: '',\n        monto: 0\n      }\n    };\n    this.listaVehiculos = []; // Asegúrate de llenar esta lista con los vehículos disponibles\n    this.listaTarifas = []; // Asegúrate de llenar esta lista con las tarifas disponibles\n    this.listadoTicketsWS = [];\n    this.horaSalida = '';\n    this.horaActual = this.obtenerHoraActual();\n  }\n  ngOnInit() {\n    this.listarTickets();\n  }\n  guardarT1() {\n    // Aquí puedes realizar la lógica para guardar los datos ingresados en el formulario\n    // Por ejemplo, podrías enviar los datos a través de un servicio HTTP para guardarlos en el backend.\n    // También puedes realizar otras validaciones o acciones necesarias antes de guardar.\n  }\n  agregarTicket() {\n    this.ticketService.save(this.ticket).subscribe(response => {\n      this.ticket = {\n        numero: 0,\n        fechaIngreso: new Date(),\n        fechaSalida: new Date(),\n        estado: '',\n        vehiculo: {\n          placa: '',\n          marca: '',\n          modelo: '',\n          color: ''\n        },\n        tarifa: {\n          id: 0,\n          tipo: '',\n          monto: 0\n        }\n      };\n      this.router.navigate(['registrarTicket']);\n      this.listarTickets();\n    }, error => {\n      console.log(\"${error}\");\n    });\n  }\n  listarTickets() {\n    this.ticketService.obtenerVehiculos().subscribe(response => {\n      this.listadoTicketsWS = response;\n      console.log('Listado de contactos:', this.listadoTicketsWS);\n    }, error => {\n      console.error('Error al obtener la lista de contactos:', error);\n    });\n  }\n  construirFechaSalida() {\n    const horaSalidaArray = this.horaSalida.split(':');\n    const fechaSalida = new Date(this.ticket.fechaIngreso);\n    fechaSalida.setHours(Number(horaSalidaArray[0]), Number(horaSalidaArray[1]), Number(horaSalidaArray[2]));\n    return fechaSalida;\n  }\n  obtenerHoraActual() {\n    const fechaActual = new Date();\n    return `${fechaActual.getHours().toString().padStart(2, '0')}:${fechaActual.getMinutes().toString().padStart(2, '0')}:${fechaActual.getSeconds().toString().padStart(2, '0')}`;\n  }\n  establecerHoraActual() {\n    this.horaSalida = this.obtenerHoraActual();\n  }\n  actualizarHoraActual() {\n    const fechaActual = new Date();\n    this.horaActual = `${fechaActual.getHours().toString().padStart(2, '0')}:${fechaActual.getMinutes().toString().padStart(2, '0')}:${fechaActual.getSeconds().toString().padStart(2, '0')}`;\n  }\n}\nTicketComponent.ɵfac = function TicketComponent_Factory(t) {\n  return new (t || TicketComponent)(i0.ɵɵdirectiveInject(i1.TicketService), i0.ɵɵdirectiveInject(i2.Router));\n};\nTicketComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TicketComponent,\n  selectors: [[\"app-ticket\"]],\n  decls: 44,\n  vars: 8,\n  consts: [[1, \"registro-y-listado\"], [1, \"registro-cliente\"], [\"for\", \"txtCedula\"], [\"id\", \"txtCedula\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"fechaIngreso\"], [\"type\", \"fechaIngreso\", \"id\", \"fechaIngreso\", 3, \"value\"], [\"type\", \"text\", \"id\", \"fechaIngreso\", 3, \"value\"], [\"for\", \"horaSalida\"], [\"type\", \"horaSalida\", \"id\", \"horaSalida\", \"pattern\", \"[0-2][0-9]:[0-5][0-9]:[0-5][0-9]\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 3, \"click\"], [\"for\", \"txtDireccion\"], [\"id\", \"txtDireccion\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"txtPlaca\"], [\"id\", \"txtPlaca\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [1, \"listado-clientes\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function TicketComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"Crear Ticket\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Numero:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.ticket.numero = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"br\");\n      i0.ɵɵelementStart(8, \"label\", 4);\n      i0.ɵɵtext(9, \"Fecha de Ingreso:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementStart(11, \"label\", 4);\n      i0.ɵɵtext(12, \"Fecha de Ingreso:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 6)(14, \"br\")(15, \"br\");\n      i0.ɵɵelementStart(16, \"label\", 7);\n      i0.ɵɵtext(17, \"Hora de Salida:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\")(19, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.horaSalida = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function TicketComponent_Template_button_click_20_listener() {\n        return ctx.establecerHoraActual();\n      });\n      i0.ɵɵtext(21, \"Hora Actual\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(22, \"br\");\n      i0.ɵɵelementStart(23, \"label\", 10);\n      i0.ɵɵtext(24, \"Estado:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketComponent_Template_input_ngModelChange_25_listener($event) {\n        return ctx.ticket.estado = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"br\")(27, \"br\");\n      i0.ɵɵelementStart(28, \"label\", 12);\n      i0.ɵɵtext(29, \"Placa:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketComponent_Template_input_ngModelChange_30_listener($event) {\n        return ctx.ticket.vehiculo.placa = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"br\");\n      i0.ɵɵelementStart(32, \"label\", 10);\n      i0.ɵɵtext(33, \"Tipo:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketComponent_Template_input_ngModelChange_34_listener($event) {\n        return ctx.ticket.tarifa.id = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(35, \"br\")(36, \"br\");\n      i0.ɵɵelementStart(37, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function TicketComponent_Template_button_click_37_listener() {\n        return ctx.agregarTicket();\n      });\n      i0.ɵɵtext(38, \"Guardar/Actualizar\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(39, \"div\", 15)(40, \"h2\");\n      i0.ɵɵtext(41, \"Listado de Ticket\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"ul\");\n      i0.ɵɵtemplate(43, TicketComponent_li_43_Template, 2, 6, \"li\", 16);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.ticket.numero);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"value\", ctx.horaActual);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"value\", ctx.horaActual);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.horaSalida);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.ticket.estado);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.ticket.vehiculo.placa);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.ticket.tarifa.id);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.listadoTicketsWS);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.RequiredValidator, i4.PatternValidator, i4.NgModel],\n  styles: [\".registro-y-listado[_ngcontent-%COMP%] {\\n  display: flex;\\n}\\n\\n.registro-cliente[_ngcontent-%COMP%] {\\n  flex: 1;\\n  margin-right: 20px;\\n  padding: 1rem;\\n  border-radius: 10px;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n}\\n\\n.registro-cliente[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  font-size: 2rem;\\n  color: #007bff;\\n  margin-bottom: 1rem;\\n}\\n\\n.registro-cliente[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  font-size: 1.2rem;\\n  font-weight: bold;\\n  color: #333;\\n}\\n\\n.registro-cliente[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 0.7rem;\\n  margin-bottom: 0.7rem;\\n  border: 2px solid #007bff;\\n  border-radius: 5px;\\n}\\n\\n.registro-cliente[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: #0056b3;\\n}\\n\\n.registro-cliente[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  padding: 0.7rem 1rem;\\n  background-color: #007bff;\\n  color: #fff;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n}\\n\\n.registro-cliente[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\\n}\\n\\n.listado-clientes[_ngcontent-%COMP%] {\\n  flex: 1;\\n  background-color: #f9f9f9;\\n  padding: 1rem;\\n  border-radius: 10px;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n}\\n\\n.listado-clientes[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  font-size: 2rem;\\n  color: #007bff;\\n  margin-bottom: 1rem;\\n}\\n\\n.listado-clientes[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%] {\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n.listado-clientes[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n  font-size: 1.2rem;\\n  color: #333;\\n  margin-bottom: 0.5rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvdGlja2V0L3RpY2tldC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwwQkFBQTtBQUNBO0VBQ0ksYUFBQTtBQUNKOztBQUVFO0VBQ0UsT0FBQTtFQUNBLGtCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0Esd0NBQUE7QUFDSjs7QUFFRTtFQUNFLGVBQUE7RUFDQSxjQUFBO0VBQ0EsbUJBQUE7QUFDSjs7QUFFRTtFQUNFLGlCQUFBO0VBQ0EsaUJBQUE7RUFDQSxXQUFBO0FBQ0o7O0FBRUU7RUFDRSxXQUFBO0VBQ0EsZUFBQTtFQUNBLHFCQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtBQUNKOztBQUVFO0VBQ0UsYUFBQTtFQUNBLHFCQUFBO0FBQ0o7O0FBRUU7RUFDRSxvQkFBQTtFQUNBLHlCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7QUFDSjs7QUFFRTtFQUNFLHlCQUFBO0VBQ0Esd0NBQUE7QUFDSjs7QUFFRTtFQUNFLE9BQUE7RUFDQSx5QkFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHdDQUFBO0FBQ0o7O0FBRUU7RUFDRSxlQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0FBQ0o7O0FBRUU7RUFDRSxnQkFBQTtFQUNBLFVBQUE7RUFDQSxTQUFBO0FBQ0o7O0FBRUU7RUFDRSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxxQkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLyogY2xpZW50ZS5jb21wb25lbnQuY3NzICovXHJcbi5yZWdpc3Ryby15LWxpc3RhZG8ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICB9XHJcbiAgXHJcbiAgLnJlZ2lzdHJvLWNsaWVudGUge1xyXG4gICAgZmxleDogMTtcclxuICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxuICAgIHBhZGRpbmc6IDFyZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgYm94LXNoYWRvdzogMCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICB9XHJcbiAgXHJcbiAgLnJlZ2lzdHJvLWNsaWVudGUgaDIge1xyXG4gICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgY29sb3I6ICMwMDdiZmY7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xyXG4gIH1cclxuICBcclxuICAucmVnaXN0cm8tY2xpZW50ZSBsYWJlbCB7XHJcbiAgICBmb250LXNpemU6IDEuMnJlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgY29sb3I6ICMzMzM7XHJcbiAgfVxyXG4gIFxyXG4gIC5yZWdpc3Ryby1jbGllbnRlIGlucHV0IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogMC43cmVtO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMC43cmVtO1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgIzAwN2JmZjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICB9XHJcbiAgXHJcbiAgLnJlZ2lzdHJvLWNsaWVudGUgaW5wdXQ6Zm9jdXMge1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxuICAgIGJvcmRlci1jb2xvcjogIzAwNTZiMztcclxuICB9XHJcbiAgXHJcbiAgLnJlZ2lzdHJvLWNsaWVudGUgYnV0dG9uIHtcclxuICAgIHBhZGRpbmc6IDAuN3JlbSAxcmVtO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuICBcclxuICAucmVnaXN0cm8tY2xpZW50ZSBidXR0b246aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTZiMztcclxuICAgIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMik7XHJcbiAgfVxyXG4gIFxyXG4gIC5saXN0YWRvLWNsaWVudGVzIHtcclxuICAgIGZsZXg6IDE7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xyXG4gICAgcGFkZGluZzogMXJlbTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIH1cclxuICBcclxuICAubGlzdGFkby1jbGllbnRlcyBoMiB7XHJcbiAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICBjb2xvcjogIzAwN2JmZjtcclxuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XHJcbiAgfVxyXG4gIFxyXG4gIC5saXN0YWRvLWNsaWVudGVzIHVsIHtcclxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gIH1cclxuICBcclxuICAubGlzdGFkby1jbGllbnRlcyBsaSB7XHJcbiAgICBmb250LXNpemU6IDEuMnJlbTtcclxuICAgIGNvbG9yOiAjMzMzO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","TicketComponent","constructor","ticketService","router","numero","fechaIngreso","Date","fechaSalida","estado","vehiculo","placa","marca","modelo","color","tarifa","id","tipo","monto","obtenerHoraActual","ngOnInit","listarTickets","guardarT1","agregarTicket","save","ticket","subscribe","response","navigate","error","console","log","obtenerVehiculos","listadoTicketsWS","construirFechaSalida","horaSalidaArray","horaSalida","split","setHours","Number","fechaActual","getHours","toString","padStart","getMinutes","getSeconds","establecerHoraActual","actualizarHoraActual","horaActual","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Danny\\workspace\\ProyectoFinal\\src\\app\\pages\\ticket\\ticket.component.html","C:\\Users\\Danny\\workspace\\ProyectoFinal\\src\\app\\pages\\ticket\\ticket.component.ts"],"sourcesContent":["<div class=\"registro-y-listado\">\n    <!-- Sección de Registro de Cliente -->\n    <div class=\"registro-cliente\">\n        <h2>Crear Ticket</h2>\n        <label for=\"txtCedula\">Numero:</label>\n        <input id=\"txtCedula\" [(ngModel)]=\"ticket.numero\" />\n        <br />\n        <label for=\"fechaIngreso\">Fecha de Ingreso:</label>\n        <input type=\"fechaIngreso\" id=\"fechaIngreso\" [value]=\"horaActual\">\n\n        <label for=\"fechaIngreso\">Fecha de Ingreso:</label>\n        <input type=\"text\" id=\"fechaIngreso\" [value]=\"horaActual\">\n        <br>\n\n        <br>\n        <label for=\"horaSalida\">Hora de Salida:</label>\n        <div>\n            <input type=\"horaSalida\" id=\"horaSalida\" [(ngModel)]=\"horaSalida\" pattern=\"[0-2][0-9]:[0-5][0-9]:[0-5][0-9]\"\n                required>\n            <button type=\"button\" (click)=\"establecerHoraActual()\">Hora Actual</button>\n        </div>\n        <!-- <small>Formato: HH:mm:ss (Ejemplo: 21:21:21)</small>-->\n        <br />\n        <label for=\"txtDireccion\">Estado:</label>\n        <input id=\"txtDireccion\" [(ngModel)]=\"ticket.estado\" />\n        <br />\n        <br />\n        <label for=\"txtPlaca\">Placa:</label>\n        <input id=\"txtPlaca\" [(ngModel)]=\"ticket.vehiculo.placa\" />\n        <br />\n        <label for=\"txtDireccion\">Tipo:</label>\n        <input id=\"txtDireccion\" [(ngModel)]=\"ticket.tarifa.id\" />\n        <br>\n        <br />\n        <button (click)=\"agregarTicket()\">Guardar/Actualizar</button>\n    </div>\n    <div class=\"listado-clientes\">\n        <h2>Listado de Ticket</h2>\n        <ul>\n            <li *ngFor=\"let ticket of listadoTicketsWS\">\n                {{ ticket.numero }} - {{ ticket.fechaIngreso }} - {{ ticket.fechaSalida }} - {{ ticket.estado }} -{{\n                ticket.vehiculo.placa }} - {{ticket.tarifa.tipo}}\n                <!-- \n        <button (click)=\"eliminarPersona(cliente)\">Eliminar</button>\n        <button (click)=\"listar(cliente)\">Listar</button>\n        -->\n            </li>\n        </ul>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Cliente } from 'src/app/domain/cliente';\nimport { Ticket } from 'src/app/domain/ticket';\nimport { TicketService } from 'src/app/services/ticket.service';\n\n@Component({\n  selector: 'app-ticket',\n  templateUrl: './ticket.component.html',\n  styleUrls: ['./ticket.component.scss']\n})\nexport class TicketComponent {\n\n  ticket: Ticket = {\n    numero: 0,\n    fechaIngreso: new Date(),\n    fechaSalida: new Date(),\n    estado: '',\n    vehiculo: {\n      placa: '',\n      marca: '',\n      modelo: '',\n      color: ''\n    },\n    tarifa: {\n      id: 0,\n      tipo: '',\n      monto: 0\n    }\n  };\n\n  constructor(public ticketService: TicketService, private router: Router) { }\n  listaVehiculos: any[] = []; // Asegúrate de llenar esta lista con los vehículos disponibles\n  listaTarifas: any[] = []; // Asegúrate de llenar esta lista con las tarifas disponibles\n\n  listadoTicketsWS: any[] = [];\n\n  ngOnInit(): void {\n    this.listarTickets();\n  }\n\n  guardarT1() {\n    // Aquí puedes realizar la lógica para guardar los datos ingresados en el formulario\n    // Por ejemplo, podrías enviar los datos a través de un servicio HTTP para guardarlos en el backend.\n    // También puedes realizar otras validaciones o acciones necesarias antes de guardar.\n  }\n\n  agregarTicket() {\n    this.ticketService.save(this.ticket).subscribe(\n      response => {\n        this.ticket = {numero: 0, fechaIngreso: new Date(), fechaSalida: new Date(), estado: '',\n          vehiculo: {\n            placa: '',\n            marca: '',\n            modelo: '',\n            color: ''\n          },\n          tarifa: {\n            id: 0,\n            tipo: '',\n            monto: 0\n          }\n        };\n        this.router.navigate(['registrarTicket']);\n        this.listarTickets();\n      },\n      error => {\n        console.log(\"${error}\");\n      }\n    );\n  }\n\n\n  public listarTickets() {\n    this.ticketService.obtenerVehiculos().subscribe(\n      (response) => {\n        this.listadoTicketsWS = response;\n        console.log('Listado de contactos:', this.listadoTicketsWS);\n      },\n      (error) => {\n        console.error('Error al obtener la lista de contactos:', error);\n      }\n    );\n  }\n\n  horaSalida: string = '';\n  horaActual: string = this.obtenerHoraActual();\n\n  construirFechaSalida(): Date {\n    const horaSalidaArray = this.horaSalida.split(':');\n    const fechaSalida = new Date(this.ticket.fechaIngreso);\n    fechaSalida.setHours(Number(horaSalidaArray[0]), Number(horaSalidaArray[1]), Number(horaSalidaArray[2]));\n    return fechaSalida;\n  }\n  obtenerHoraActual(): string {\n    const fechaActual = new Date();\n    return `${fechaActual.getHours().toString().padStart(2, '0')}:${fechaActual.getMinutes().toString().padStart(2, '0')}:${fechaActual.getSeconds().toString().padStart(2, '0')}`;\n  }\n  \n  establecerHoraActual() {\n    this.horaSalida = this.obtenerHoraActual();\n  }\n  actualizarHoraActual() {\n    const fechaActual = new Date();\n    this.horaActual = `${fechaActual.getHours().toString().padStart(2, '0')}:${fechaActual.getMinutes().toString().padStart(2, '0')}:${fechaActual.getSeconds().toString().padStart(2, '0')}`;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}