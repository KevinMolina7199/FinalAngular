{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet TicketComponent = class TicketComponent {\n  //ticket: Ticket[] = [];\n  constructor(ticketService, router) {\n    this.ticketService = ticketService;\n    this.router = router;\n    //numero: '', estado: '', fechaIngreso: '', fechaSalida: '', vehiculo: '',tarifa: ''\n    //ticket: Ticket = {numero: '', estado: '', fechaIngreso: '', fechaSalida: ''};\n    this.ticket = {\n      numero: 0,\n      fechaIngreso: new Date(),\n      fechaSalida: new Date(),\n      estado: '',\n      vehiculo: {\n        placa: '',\n        marca: '',\n        modelo: '',\n        color: ''\n      },\n      tarifa: {\n        id: 0,\n        tipo: '',\n        monto: 0\n      }\n    };\n    this.listaVehiculos = []; // Asegúrate de llenar esta lista con los vehículos disponibles\n    this.listaTarifas = []; // Asegúrate de llenar esta lista con las tarifas disponibles\n    this.listadoTicketsWS = [];\n  }\n  ngOnInit() {\n    this.listarTickets();\n  }\n  guardarT1() {\n    // Aquí puedes realizar la lógica para guardar los datos ingresados en el formulario\n    // Por ejemplo, podrías enviar los datos a través de un servicio HTTP para guardarlos en el backend.\n    // También puedes realizar otras validaciones o acciones necesarias antes de guardar.\n  }\n  listarTickets() {\n    this.ticketService.obtenerVehiculos().subscribe(response => {\n      this.listadoTicketsWS = response;\n      console.log('Listado de contactos:', this.listadoTicketsWS);\n    }, error => {\n      console.error('Error al obtener la lista de contactos:', error);\n    });\n  }\n};\nTicketComponent = __decorate([Component({\n  selector: 'app-ticket',\n  templateUrl: './ticket.component.html',\n  styleUrls: ['./ticket.component.scss']\n})], TicketComponent);\nexport { TicketComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWlC,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAoB1B;EAEAC,YAAmBC,aAA4B,EAASC,MAAc;IAAnD,kBAAa,GAAbD,aAAa;IAAwB,WAAM,GAANC,MAAM;IArBhE;IACE;IACA,WAAM,GAAW;MACfC,MAAM,EAAE,CAAC;MACTC,YAAY,EAAE,IAAIC,IAAI,EAAE;MACxBC,WAAW,EAAE,IAAID,IAAI,EAAE;MACvBE,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,MAAM,EAAE,EAAE;QACVC,KAAK,EAAE;OACR;MACDC,MAAM,EAAE;QACNC,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE;;KAEV;IAID,mBAAc,GAAU,EAAE,CAAC,CAAC;IAC5B,iBAAY,GAAU,EAAE,CAAC,CAAC;IAE1B,qBAAgB,GAAU,EAAE;EAJ4C;EAMxEC,QAAQ;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAC,SAAS;IACP;IACA;IACA;EAAA;EAEKD,aAAa;IAClB,IAAI,CAACjB,aAAa,CAACmB,gBAAgB,EAAE,CAACC,SAAS,CAC5CC,QAAQ,IAAI;MACX,IAAI,CAACC,gBAAgB,GAAGD,QAAQ;MAChCE,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAACF,gBAAgB,CAAC;IAC7D,CAAC,EACAG,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IACjE,CAAC,CACF;EACH;CAED;AAjDY3B,eAAe,eAL3BD,SAAS,CAAC;EACT6B,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,GACW9B,eAAe,CAiD3B;SAjDYA,eAAe","names":["Component","TicketComponent","constructor","ticketService","router","numero","fechaIngreso","Date","fechaSalida","estado","vehiculo","placa","marca","modelo","color","tarifa","id","tipo","monto","ngOnInit","listarTickets","guardarT1","obtenerVehiculos","subscribe","response","listadoTicketsWS","console","log","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Danny\\workspace\\ProyectoFinal\\src\\app\\pages\\ticket\\ticket.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Cliente } from 'src/app/domain/cliente';\nimport { Ticket } from 'src/app/domain/ticket';\nimport { TicketService } from 'src/app/services/ticket.service';\n\n@Component({\n  selector: 'app-ticket',\n  templateUrl: './ticket.component.html',\n  styleUrls: ['./ticket.component.scss']\n})\nexport class TicketComponent {\n//numero: '', estado: '', fechaIngreso: '', fechaSalida: '', vehiculo: '',tarifa: ''\n  //ticket: Ticket = {numero: '', estado: '', fechaIngreso: '', fechaSalida: ''};\n  ticket: Ticket = {\n    numero: 0,\n    fechaIngreso: new Date(),\n    fechaSalida: new Date(),\n    estado: '',\n    vehiculo: {\n      placa: '',\n      marca: '',\n      modelo: '',\n      color: ''\n    },\n    tarifa: {\n      id: 0,\n      tipo: '',\n      monto: 0\n    }\n  };\n  //ticket: Ticket[] = [];\n  \n  constructor(public ticketService: TicketService,private router: Router){}\n  listaVehiculos: any[] = []; // Asegúrate de llenar esta lista con los vehículos disponibles\n  listaTarifas: any[] = []; // Asegúrate de llenar esta lista con las tarifas disponibles\n\n  listadoTicketsWS: any[] = [];\n\n  ngOnInit(): void {\n    this.listarTickets();\n  }\n\n  guardarT1() {\n    // Aquí puedes realizar la lógica para guardar los datos ingresados en el formulario\n    // Por ejemplo, podrías enviar los datos a través de un servicio HTTP para guardarlos en el backend.\n    // También puedes realizar otras validaciones o acciones necesarias antes de guardar.\n  }\n  public listarTickets (){\n    this.ticketService.obtenerVehiculos().subscribe(\n      (response) => {\n        this.listadoTicketsWS = response;\n        console.log('Listado de contactos:', this.listadoTicketsWS);\n      },\n      (error) => {\n        console.error('Error al obtener la lista de contactos:', error);\n      }\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}