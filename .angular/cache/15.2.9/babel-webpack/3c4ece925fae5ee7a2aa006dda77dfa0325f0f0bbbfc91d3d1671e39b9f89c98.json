{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/ticket.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction TicketComponent_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const vehiculo_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", vehiculo_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(vehiculo_r2);\n  }\n}\nfunction TicketComponent_li_36_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function TicketComponent_li_36_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const ticket_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.listar(ticket_r3));\n    });\n    i0.ɵɵtext(3, \"Listar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ticket_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate6(\" \", ticket_r3.numero, \" - \", ticket_r3.fechaIngreso, \" - \", ticket_r3.fechaSalida, \" - \", ticket_r3.estado, \" -\", ticket_r3.vehiculo.placa, \" - \", ticket_r3.tarifa.tipo, \" \");\n  }\n}\nexport class TicketComponent {\n  constructor(ticketService, router) {\n    this.ticketService = ticketService;\n    this.router = router;\n    this.ticket = {\n      numero: 5,\n      fechaIngreso: '',\n      fechaSalida: '',\n      estado: 'Activo',\n      vehiculo: {\n        placa: 'AFT0976',\n        marca: '',\n        modelo: '',\n        color: ''\n      },\n      tarifa: {\n        id: 1,\n        tipo: '',\n        monto: 0.5\n      }\n    };\n    this.listadoTicketsWS = [];\n    this.vehiculosDisponibles = [];\n  }\n  ngOnInit() {\n    this.listarTickets();\n    this.ticket.fechaIngreso = this.obtenerHoraActual();\n  }\n  agregarTicket() {\n    if (this.ticket.fechaIngreso === '') {\n      this.ticket.fechaIngreso = null;\n    }\n    if (this.ticket.fechaSalida === '') {\n      this.ticket.fechaSalida = null;\n    }\n    this.ticketService.save(this.ticket).subscribe(response => {\n      this.ticket = {\n        numero: 0,\n        fechaIngreso: '',\n        fechaSalida: '',\n        estado: '',\n        vehiculo: {\n          placa: '',\n          marca: '',\n          modelo: '',\n          color: ''\n        },\n        tarifa: {\n          id: 0,\n          tipo: '',\n          monto: 0\n        }\n      };\n      this.router.navigate(['registrarTicket']);\n      this.listarTickets();\n    }, error => {\n      console.log(\"${error}\");\n    });\n  }\n  listarTickets() {\n    this.ticketService.obtenerVehiculos().subscribe(response => {\n      this.listadoTicketsWS = response;\n      console.log('Listado de contactos:', this.listadoTicketsWS);\n    }, error => {\n      console.error('Error al obtener la lista de contactos:', error);\n    });\n  }\n  listar(ticket) {\n    this.listarTickets();\n    this.ticket = {\n      numero: ticket.numero,\n      fechaIngreso: ticket.fechaIngreso,\n      fechaSalida: ticket.fechaSalida,\n      estado: ticket.estado,\n      vehiculo: ticket.vehiculo,\n      tarifa: ticket.tarifa\n    };\n  }\n  obtenerHoraActual() {\n    const fechaActual = new Date();\n    const hora = String(fechaActual.getHours()).padStart(2, '0');\n    const minutos = String(fechaActual.getMinutes()).padStart(2, '0');\n    const segundos = String(fechaActual.getSeconds()).padStart(2, '0');\n    return `${hora}:${minutos}:${segundos}`;\n  }\n  obtenerVehiculosDisponibles() {\n    this.ticketService.obtenerVehiculos().subscribe(response => {\n      this.vehiculosDisponibles = response; // Actualizamos la lista con los vehículos obtenidos\n      console.log('Vehículos disponibles:', this.vehiculosDisponibles);\n    }, error => {\n      console.error('Error al obtener la lista de vehículos:', error);\n    });\n  }\n}\nTicketComponent.ɵfac = function TicketComponent_Factory(t) {\n  return new (t || TicketComponent)(i0.ɵɵdirectiveInject(i1.TicketService), i0.ɵɵdirectiveInject(i2.Router));\n};\nTicketComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TicketComponent,\n  selectors: [[\"app-ticket\"]],\n  decls: 37,\n  vars: 8,\n  consts: [[1, \"registro-y-listado\"], [1, \"registro-cliente\"], [\"for\", \"txtNumero\"], [\"id\", \"txtNumero\", \"placeholder\", \"Numero de Ticket\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"txtfechaIngreso\"], [\"id\", \"txtfechaIngreso\", \"type\", \"time\", \"placeholder\", \"Hora de ingreso (opcional)\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"txtEstado\"], [\"id\", \"txtEstado\", \"disabled\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"txtPlaca\"], [\"id\", \"txtPlaca\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"txtTarifa\"], [\"id\", \"txtTarifa\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [1, \"listado-clientes\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function TicketComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"Crear Ticket\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Numero:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.ticket.numero = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"br\");\n      i0.ɵɵelementStart(8, \"label\", 4);\n      i0.ɵɵtext(9, \"Fecha de Ingreso:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.ticket.fechaIngreso = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"br\");\n      i0.ɵɵelementStart(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Estado:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.ticket.estado = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"br\");\n      i0.ɵɵelementStart(16, \"label\", 8);\n      i0.ɵɵtext(17, \"Placa:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"select\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketComponent_Template_select_ngModelChange_18_listener($event) {\n        return ctx.ticket.vehiculo.placa = $event;\n      });\n      i0.ɵɵtemplate(19, TicketComponent_option_19_Template, 2, 2, \"option\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"label\", 8);\n      i0.ɵɵtext(21, \"Placa:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.ticket.vehiculo.placa = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"br\");\n      i0.ɵɵelementStart(24, \"label\", 11);\n      i0.ɵɵtext(25, \"Tipo:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.ticket.tarifa.id = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"br\")(28, \"br\")(29, \"br\");\n      i0.ɵɵelementStart(30, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function TicketComponent_Template_button_click_30_listener() {\n        return ctx.agregarTicket();\n      });\n      i0.ɵɵtext(31, \"Guardar/Actualizar\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"div\", 14)(33, \"h2\");\n      i0.ɵɵtext(34, \"Listado de Ticket\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"ul\");\n      i0.ɵɵtemplate(36, TicketComponent_li_36_Template, 4, 6, \"li\", 15);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.ticket.numero);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.ticket.fechaIngreso);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.ticket.estado);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.ticket.vehiculo.placa);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.vehiculosDisponibles);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.ticket.vehiculo.placa);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.ticket.tarifa.id);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.listadoTicketsWS);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel],\n  styles: [\".registro-y-listado[_ngcontent-%COMP%] {\\n  display: flex;\\n}\\n\\n.registro-cliente[_ngcontent-%COMP%] {\\n  flex: 1;\\n  margin-right: 20px;\\n  padding: 1rem;\\n  border-radius: 10px;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n}\\n\\n.registro-cliente[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  font-size: 2rem;\\n  color: #007bff;\\n  margin-bottom: 1rem;\\n}\\n\\n.registro-cliente[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  font-size: 1.2rem;\\n  font-weight: bold;\\n  color: #333;\\n}\\n\\n.registro-cliente[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 0.7rem;\\n  margin-bottom: 0.7rem;\\n  border: 2px solid #007bff;\\n  border-radius: 5px;\\n}\\n\\n.registro-cliente[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: #0056b3;\\n}\\n\\n.registro-cliente[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  padding: 0.7rem 1rem;\\n  background-color: #007bff;\\n  color: #fff;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n}\\n\\n.registro-cliente[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\\n}\\n\\n.listado-clientes[_ngcontent-%COMP%] {\\n  flex: 1;\\n  background-color: #f9f9f9;\\n  padding: 1rem;\\n  border-radius: 10px;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n}\\n\\n.listado-clientes[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  font-size: 2rem;\\n  color: #007bff;\\n  margin-bottom: 1rem;\\n}\\n\\n.listado-clientes[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%] {\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n.listado-clientes[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n  font-size: 1.2rem;\\n  color: #333;\\n  margin-bottom: 0.5rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvdGlja2V0L3RpY2tldC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwwQkFBQTtBQUNBO0VBQ0ksYUFBQTtBQUNKOztBQUVFO0VBQ0UsT0FBQTtFQUNBLGtCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0Esd0NBQUE7QUFDSjs7QUFFRTtFQUNFLGVBQUE7RUFDQSxjQUFBO0VBQ0EsbUJBQUE7QUFDSjs7QUFFRTtFQUNFLGlCQUFBO0VBQ0EsaUJBQUE7RUFDQSxXQUFBO0FBQ0o7O0FBRUU7RUFDRSxXQUFBO0VBQ0EsZUFBQTtFQUNBLHFCQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtBQUNKOztBQUVFO0VBQ0UsYUFBQTtFQUNBLHFCQUFBO0FBQ0o7O0FBRUU7RUFDRSxvQkFBQTtFQUNBLHlCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7QUFDSjs7QUFFRTtFQUNFLHlCQUFBO0VBQ0Esd0NBQUE7QUFDSjs7QUFFRTtFQUNFLE9BQUE7RUFDQSx5QkFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHdDQUFBO0FBQ0o7O0FBRUU7RUFDRSxlQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0FBQ0o7O0FBRUU7RUFDRSxnQkFBQTtFQUNBLFVBQUE7RUFDQSxTQUFBO0FBQ0o7O0FBRUU7RUFDRSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxxQkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLyogY2xpZW50ZS5jb21wb25lbnQuY3NzICovXHJcbi5yZWdpc3Ryby15LWxpc3RhZG8ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICB9XHJcbiAgXHJcbiAgLnJlZ2lzdHJvLWNsaWVudGUge1xyXG4gICAgZmxleDogMTtcclxuICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxuICAgIHBhZGRpbmc6IDFyZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgYm94LXNoYWRvdzogMCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICB9XHJcbiAgXHJcbiAgLnJlZ2lzdHJvLWNsaWVudGUgaDIge1xyXG4gICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgY29sb3I6ICMwMDdiZmY7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xyXG4gIH1cclxuICBcclxuICAucmVnaXN0cm8tY2xpZW50ZSBsYWJlbCB7XHJcbiAgICBmb250LXNpemU6IDEuMnJlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgY29sb3I6ICMzMzM7XHJcbiAgfVxyXG4gIFxyXG4gIC5yZWdpc3Ryby1jbGllbnRlIGlucHV0IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogMC43cmVtO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMC43cmVtO1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgIzAwN2JmZjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICB9XHJcbiAgXHJcbiAgLnJlZ2lzdHJvLWNsaWVudGUgaW5wdXQ6Zm9jdXMge1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxuICAgIGJvcmRlci1jb2xvcjogIzAwNTZiMztcclxuICB9XHJcbiAgXHJcbiAgLnJlZ2lzdHJvLWNsaWVudGUgYnV0dG9uIHtcclxuICAgIHBhZGRpbmc6IDAuN3JlbSAxcmVtO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuICBcclxuICAucmVnaXN0cm8tY2xpZW50ZSBidXR0b246aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTZiMztcclxuICAgIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMik7XHJcbiAgfVxyXG4gIFxyXG4gIC5saXN0YWRvLWNsaWVudGVzIHtcclxuICAgIGZsZXg6IDE7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xyXG4gICAgcGFkZGluZzogMXJlbTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIH1cclxuICBcclxuICAubGlzdGFkby1jbGllbnRlcyBoMiB7XHJcbiAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICBjb2xvcjogIzAwN2JmZjtcclxuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XHJcbiAgfVxyXG4gIFxyXG4gIC5saXN0YWRvLWNsaWVudGVzIHVsIHtcclxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gIH1cclxuICBcclxuICAubGlzdGFkby1jbGllbnRlcyBsaSB7XHJcbiAgICBmb250LXNpemU6IDEuMnJlbTtcclxuICAgIGNvbG9yOiAjMzMzO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","TicketComponent","constructor","ticketService","router","numero","fechaIngreso","fechaSalida","estado","vehiculo","placa","marca","modelo","color","tarifa","id","tipo","monto","ngOnInit","listarTickets","ticket","obtenerHoraActual","agregarTicket","save","subscribe","response","navigate","error","console","log","obtenerVehiculos","listadoTicketsWS","listar","fechaActual","Date","hora","String","getHours","padStart","minutos","getMinutes","segundos","getSeconds","obtenerVehiculosDisponibles","vehiculosDisponibles","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Danny\\workspace\\ProyectoFinal\\src\\app\\pages\\ticket\\ticket.component.html","C:\\Users\\Danny\\workspace\\ProyectoFinal\\src\\app\\pages\\ticket\\ticket.component.ts"],"sourcesContent":["<div class=\"registro-y-listado\">\n    <!-- Sección de Registro de Cliente -->\n    <div class=\"registro-cliente\">\n        <h2>Crear Ticket</h2>\n        <label for=\"txtNumero\">Numero:</label>\n        <input id=\"txtNumero\" [(ngModel)]=\"ticket.numero\" placeholder=\"Numero de Ticket\" />\n        <br />\n        <label for=\"txtfechaIngreso\">Fecha de Ingreso:</label>\n        <input id=\"txtfechaIngreso\" type=\"time\" [(ngModel)]=\"ticket.fechaIngreso\"\n            placeholder=\"Hora de ingreso (opcional)\" />\n        <br />\n        <!--\n        <label for=\"txtfechaSalida\">Fecha de Salida:</label>\n        <input id=\"txtfechaSalida\" [(ngModel)]=\"ticket.fechaSalida\" required />\n        -->\n        <label for=\"txtEstado\">Estado:</label>\n        <input id=\"txtEstado\" [(ngModel)]=\"ticket.estado\" disabled/>\n        <br />\n\n        <label for=\"txtPlaca\">Placa:</label>\n        <select id=\"txtPlaca\" [(ngModel)]=\"ticket.vehiculo.placa\">\n            <option *ngFor=\"let vehiculo of vehiculosDisponibles\" [value]=\"vehiculo\">{{ vehiculo }}</option>\n        </select>\n\n        <label for=\"txtPlaca\">Placa:</label>\n        <input id=\"txtPlaca\" [(ngModel)]=\"ticket.vehiculo.placa\" />\n        <br />\n        <label for=\"txtTarifa\">Tipo:</label>\n        <input id=\"txtTarifa\" [(ngModel)]=\"ticket.tarifa.id\" />\n        <br>\n        <br>\n        <br />\n        <button (click)=\"agregarTicket()\">Guardar/Actualizar</button>\n    </div>\n    <div class=\"listado-clientes\">\n        <h2>Listado de Ticket</h2>\n        <ul>\n            <li *ngFor=\"let ticket of listadoTicketsWS\">\n                {{ ticket.numero }} - {{ ticket.fechaIngreso }} - {{ ticket.fechaSalida }} - {{ ticket.estado }} -{{\n                ticket.vehiculo.placa }} - {{ticket.tarifa.tipo}}\n                <button (click)=\"listar(ticket)\">Listar</button>\n                <!-- \n        <button (click)=\"eliminarPersona(cliente)\">Eliminar</button>\n        \n        -->\n            </li>\n        </ul>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Ticket } from 'src/app/domain/ticket';\nimport { TicketService } from 'src/app/services/ticket.service';\n\n@Component({\n  selector: 'app-ticket',\n  templateUrl: './ticket.component.html',\n  styleUrls: ['./ticket.component.scss']\n})\nexport class TicketComponent {\n\n\n  \n  ticket: Ticket = {\n    numero: 5,\n    fechaIngreso: '',\n    fechaSalida: '',\n    estado: 'Activo',\n    vehiculo: {\n      placa: 'AFT0976',\n      marca: '',\n      modelo: '',\n      color: ''\n    },\n    tarifa: {\n      id: 1,\n      tipo: '',\n      monto: 0.5\n    }\n  };\n\n  constructor(public ticketService: TicketService, private router: Router) { }\n  listadoTicketsWS: any[] = [];\n\n  ngOnInit(): void {\n    this.listarTickets();\n    this.ticket.fechaIngreso = this.obtenerHoraActual();\n  }\n\n  agregarTicket() {\n    if (this.ticket.fechaIngreso === '') {\n      this.ticket.fechaIngreso = null;\n    }\n    if (this.ticket.fechaSalida === '') {\n      this.ticket.fechaSalida = null;\n    }\n    this.ticketService.save(this.ticket).subscribe(\n      response => {\n        this.ticket = {numero: 0, fechaIngreso: '', fechaSalida: '', estado: '',\n          vehiculo: {\n            placa: '',\n            marca: '',\n            modelo: '',\n            color: ''\n          },\n          tarifa: {\n            id: 0,\n            tipo: '',\n            monto: 0\n          }\n        };\n        this.router.navigate(['registrarTicket']);\n        this.listarTickets();\n      },\n      error => {\n        console.log(\"${error}\");\n      }\n    );\n  }\n\n  public listarTickets() {\n    this.ticketService.obtenerVehiculos().subscribe(\n      (response) => {\n        this.listadoTicketsWS = response;\n        console.log('Listado de contactos:', this.listadoTicketsWS);\n      },\n      (error) => {\n        console.error('Error al obtener la lista de contactos:', error);\n      }\n    );\n  }\n\n  listar(ticket: Ticket){\n    this.listarTickets();\n    this.ticket = { numero: ticket.numero, fechaIngreso: ticket.fechaIngreso , fechaSalida: ticket.fechaSalida, estado: ticket.estado, vehiculo: ticket.vehiculo, tarifa: ticket.tarifa};\n  }\n\n  obtenerHoraActual(): string {\n    const fechaActual = new Date();\n    const hora = String(fechaActual.getHours()).padStart(2, '0');\n    const minutos = String(fechaActual.getMinutes()).padStart(2, '0');\n    const segundos = String(fechaActual.getSeconds()).padStart(2, '0');\n    return `${hora}:${minutos}:${segundos}`;\n  }\n\n  vehiculosDisponibles: string[] = [];\n\n  obtenerVehiculosDisponibles() {\n    this.ticketService.obtenerVehiculos().subscribe(\n      (response) => {\n        this.vehiculosDisponibles = response; // Actualizamos la lista con los vehículos obtenidos\n        console.log('Vehículos disponibles:', this.vehiculosDisponibles);\n      },\n      (error) => {\n        console.error('Error al obtener la lista de vehículos:', error);\n      }\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}